name: 'Build and push main'
on:
  push:
    branches:
      - 'main'
    # Ignore specific changes
    paths-ignore:
      - 'deploy/**'

env:
  IMAGE_NAME: cert-manager-webhook-pdns

jobs:
  build-and-publish:

    runs-on: ubuntu-latest

    timeout-minutes: 60

    permissions:
      packages: write
      contents: write

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Log in to Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'linux/amd64,linux/arm64'
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ github.sha }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      # Publish the manifests
      - name: Configure git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - name: Install yq
        run: |
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod a+x /usr/local/bin/yq

      - name: Build manifests
        run: |
          helm template \
          --set image.repository=ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }} \
          --set image.tag=${{ github.sha }} \
          cert-manager-webhook-pdns \
          deploy/cert-manager-webhook-pdns | /usr/local/bin/yq "del(.metadata.labels)" > "deploy/cert-manager-webhook-pdns.yaml"

      - name: Commit and push manifests
        run: |
          git status
          git add deploy/cert-manager-webhook-pdns.yaml
          git status
          git commit -m "publish manifests ${{ github.sha }}"
          git status
          git show
          git push
          git status
          git log
